definitions:
  common.Paging:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  patientcommands.PatientProfileCmdDTO:
    properties:
      address:
        type: string
      city:
        type: string
      desc-pathology:
        type: string
      district:
        type: string
      dob:
        type: string
      email:
        type: string
      full-name:
        type: string
      gender:
        type: boolean
      note-for-nurse:
        type: string
      phone-number:
        type: string
      ward:
        type: string
    type: object
  relativescommands.CreateRelativeAccountCmdDTO:
    properties:
      address:
        type: string
      city:
        type: string
      district:
        type: string
      dob:
        type: string
      email:
        type: string
      full-name:
        type: string
      gender:
        type: boolean
      password:
        type: string
      phone-number:
        type: string
      ward:
        type: string
    type: object
  relativesqueries.FieldFilterAccount:
    properties:
      email:
        type: string
      full-name:
        type: string
      phone-number:
        type: string
      role:
        type: string
    type: object
  relativesqueries.FilterAccountQuery:
    properties:
      filter:
        $ref: '#/definitions/relativesqueries.FieldFilterAccount'
      paging:
        $ref: '#/definitions/common.Paging'
    type: object
info:
  contact: {}
  description: |-
    Auth-service: https://api.curanest.com.vn/auth/swagger/index.html.
    Patient-service: https://api.curanest.com.vn/patient/swagger/index.html.
    Nurse-service: https://api.curanest.com.vn/nurse/swagger/index.html.
    Appointment-service (not ready - expected): https://api.curanest.com.vn/appointment/swagger/index.html.
    Notification-service (not ready - expected): https://api.curanest.com.vn/notification/swagger/index.html.
  title: Patient Service
  version: "1.0"
paths:
  /api/v1/patients:
    post:
      consumes:
      - application/json
      description: create patient profile
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/patientcommands.PatientProfileCmdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: create patient profile
      tags:
      - patient
  /api/v1/patients/{patient-id}:
    put:
      consumes:
      - application/json
      description: update patient profile
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/patientcommands.PatientProfileCmdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: update patient profile
      tags:
      - patient
  /api/v1/patients/relatives:
    get:
      consumes:
      - application/json
      description: get all patients belong to relatives user
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get all patients belong to relatives user
      tags:
      - patient
  /api/v1/relatives:
    post:
      consumes:
      - application/json
      description: create relatives account
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/relativescommands.CreateRelativeAccountCmdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: create relatives account
      tags:
      - relative
  /api/v1/relatives/filter:
    post:
      consumes:
      - application/json
      description: get relatives accounts with filter option
      parameters:
      - description: account creation data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/relativesqueries.FilterAccountQuery'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get relatives accounts with filter option
      tags:
      - relative
  /api/v1/relatives/me:
    get:
      consumes:
      - application/json
      description: get profile of relatives account
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: get profile of relatives account
      tags:
      - relative
  /ping:
    get:
      consumes:
      - application/json
      description: ping server
      produces:
      - application/json
      responses:
        "200":
          description: message success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request error
          schema: {}
      summary: ping server
      tags:
      - ping
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
